// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders examples template correctly 1`] = `
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "CreateLexResponseBots": {
      "Fn::Equals": [
        {
          "Ref": "InstallLexResponseBots",
        },
        "true",
      ],
    },
    "LogRetentionPeriodIsNotZero": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "LogRetentionPeriod",
            },
            0,
          ],
        },
      ],
    },
    "VPCEnabled": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Ref": "VPCSecurityGroupIdList",
            },
          ],
        },
      ],
    },
    "XRAYEnabled": {
      "Fn::Equals": [
        {
          "Ref": "XraySetting",
        },
        "TRUE",
      ],
    },
  },
  "Description": "(SO0189n-example) QnABot nested example resources - Version vx.x.x",
  "Mappings": {},
  "Outputs": {
    "EXTCreateRecentTopicsResponse": {
      "Value": {
        "Fn::GetAtt": [
          "EXTCreateRecentTopicsResponse",
          "Arn",
        ],
      },
    },
    "EXTCustomJSHook": {
      "Value": {
        "Fn::GetAtt": [
          "EXTCustomJSHook",
          "Arn",
        ],
      },
    },
    "EXTCustomPYHook": {
      "Value": {
        "Fn::GetAtt": [
          "EXTCustomPYHook",
          "Arn",
        ],
      },
    },
    "ExampleJSLambdaQuiz": {
      "Value": {
        "Fn::GetAtt": [
          "ExampleJSLambdaQuiz",
          "Arn",
        ],
      },
    },
    "ExampleJSLambdahook": {
      "Value": {
        "Fn::GetAtt": [
          "ExampleJSLambdahook",
          "Arn",
        ],
      },
    },
    "ExamplePYTHONLambdaBotBroker": {
      "Value": {
        "Fn::GetAtt": [
          "ExamplePYTHONLambdaBotBroker",
          "Arn",
        ],
      },
    },
    "ExamplePYTHONLambdaConnectCallback": {
      "Value": {
        "Fn::GetAtt": [
          "ExamplePYTHONLambdaConnectCallback",
          "Arn",
        ],
      },
    },
    "ExamplePYTHONLambdaFeedback": {
      "Value": {
        "Fn::GetAtt": [
          "ExamplePYTHONLambdaFeedback",
          "Arn",
        ],
      },
    },
    "ExamplePYTHONLambdaNext": {
      "Value": {
        "Fn::GetAtt": [
          "ExamplePYTHONLambdaNext",
          "Arn",
        ],
      },
    },
    "ExamplePYTHONLambdaPrevious": {
      "Value": {
        "Fn::GetAtt": [
          "ExamplePYTHONLambdaPrevious",
          "Arn",
        ],
      },
    },
    "ExamplePYTHONLambdahello": {
      "Value": {
        "Fn::GetAtt": [
          "ExamplePYTHONLambdahello",
          "Arn",
        ],
      },
    },
    "FeedbackSNSTopic": {
      "Value": {
        "Fn::GetAtt": [
          "FeedbackSNS",
          "TopicName",
        ],
      },
    },
    "QNAAge": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAAgeV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAAgeAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAAgeNoConfirm": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAAgeNoConfirmV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAAgeNoConfirmAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNADate": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNADateV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNADateAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNADateNoConfirm": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNADateNoConfirmV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNADateNoConfirmAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNADayOfWeek": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNADayOfWeekV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNADayOfWeekAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAEmailAddress": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAEmailAddressV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAEmailAddressAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAMonth": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAMonthV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAMonthAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAMonthNoConfirm": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAMonthNoConfirmV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAMonthNoConfirmAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAName": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNANameV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNANameAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNANumber": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNANumberV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNANumberAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNANumberNoConfirm": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNANumberNoConfirmV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNANumberNoConfirmAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAPhoneNumber": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAPhoneNumberV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAPhoneNumberAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAPhoneNumberNoConfirm": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAPhoneNumberNoConfirmV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAPhoneNumberNoConfirmAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAPin": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAPinV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAPinAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAPinNoConfirm": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAPinNoConfirmV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAPinNoConfirmAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNASocialSecurity": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNASocialSecurityV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNASocialSecurityAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNATime": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNATimeV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNATimeAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAWage": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAWageV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAWageAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAYesNo": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAYesNoV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAYesNoAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
    "QNAYesNoExit": {
      "Value": {
        "Fn::If": [
          "CreateLexResponseBots",
          {
            "Fn::Join": [
              "",
              [
                "LexV2::",
                {
                  "Ref": "ResponseBotQNAYesNoExitV2",
                },
                "/",
                {
                  "Fn::GetAtt": [
                    "ResponseBotQNAYesNoExitAliasV2",
                    "BotAliasId",
                  ],
                },
                "/",
                "en_US",
              ],
            ],
          },
          "ReponseBots disabled",
        ],
      },
    },
  },
  "Parameters": {
    "ApiUrlName": {
      "Type": "String",
    },
    "AssetBucket": {
      "Type": "String",
    },
    "AwsSdkLayerLambdaLayer": {
      "Type": "String",
    },
    "BootstrapBucket": {
      "Type": "String",
    },
    "BootstrapPrefix": {
      "Type": "String",
    },
    "CFNLambda": {
      "Type": "String",
    },
    "CFNLambdaRole": {
      "Type": "String",
    },
    "DefaultQnABotSettings": {
      "Type": "String",
    },
    "ESAddress": {
      "Type": "String",
    },
    "FeedbackKinesisFirehose": {
      "Type": "String",
    },
    "FeedbackKinesisFirehoseName": {
      "Type": "String",
    },
    "FulfillmentLambdaRole": {
      "Type": "String",
    },
    "Index": {
      "Type": "String",
    },
    "InstallLexResponseBots": {
      "Type": "String",
    },
    "LogRetentionPeriod": {
      "Type": "Number",
    },
    "PrivateQnABotSettings": {
      "Type": "String",
    },
    "QIDLambdaArn": {
      "Type": "String",
    },
    "QnAType": {
      "Type": "String",
    },
    "QuizType": {
      "Type": "String",
    },
    "S3Clean": {
      "Type": "String",
    },
    "VPCSecurityGroupIdList": {
      "Type": "String",
    },
    "VPCSubnetIdList": {
      "Type": "String",
    },
    "XraySetting": {
      "Type": "String",
    },
  },
  "Resources": {
    "BotBrokerLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "ExamplePYTHONLambdaBotBroker",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "BotRuntimeRole": {
      "Condition": "CreateLexResponseBots",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "comprehend:DetectSentiment action cannot be bound to a resource",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "lexv2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "polly:SynthesizeSpeech",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:\${AWS::Partition}:polly:\${AWS::Region}:\${AWS::AccountId}:lexicon/*",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Polly",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "comprehend:DetectSentiment",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Comprehend",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeVersionCreateRecentTopicsResponse": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/EXTCreateRecentTopicsResponse.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "CodeVersionCustomJSHook": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/EXTCustomJSHook.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "CodeVersionCustomPYHook": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/EXTCustomPYHook.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "ConnectCallbackLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "ExamplePYTHONLambdaConnectCallback",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "CreateRecentTopicsResponseLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "EXTCreateRecentTopicsResponse",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "CustomJSHookLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "EXTCustomJSHook",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "CustomPYHookLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "EXTCustomPYHook",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "EXTCreateRecentTopicsResponse": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/EXTCreateRecentTopicsResponse.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "CodeVersionCreateRecentTopicsResponse",
          },
        },
        "Environment": {
          "Variables": {
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
          },
        },
        "Handler": "CreateRecentTopicsResponse.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
          {
            "Ref": "JsLambdaHookSDKLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "CreateRecentTopicsResponseLogGroup",
          },
        },
        "MemorySize": "2048",
        "Role": {
          "Fn::GetAtt": [
            "ExtensionLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "LambdaHook",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "EXTCustomJSHook": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/EXTCustomJSHook.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "CodeVersionCustomJSHook",
          },
        },
        "Environment": {
          "Variables": {
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
          },
        },
        "Handler": "CustomJSHook.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
          {
            "Ref": "JsLambdaHookSDKLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "CustomJSHookLogGroup",
          },
        },
        "MemorySize": "2048",
        "Role": {
          "Fn::GetAtt": [
            "ExtensionLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "LambdaHook",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "EXTCustomPYHook": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/EXTCustomPYHook.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "CodeVersionCustomPYHook",
          },
        },
        "Environment": {
          "Variables": {
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "PYTHONPATH": "/var/task/py_modules:/var/runtime:/opt/python",
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "CustomPYHook.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "CustomPYHookLogGroup",
          },
        },
        "MemorySize": "2048",
        "Role": {
          "Fn::GetAtt": [
            "ExtensionLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "LambdaHook",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "EXTUiImport": {
      "Properties": {
        "Bucket": {
          "Ref": "AssetBucket",
        },
        "CreateRecentTopicsResponseJS": {
          "Ref": "EXTCreateRecentTopicsResponse",
        },
        "CustomJSHookJS": {
          "Ref": "EXTCustomJSHook",
        },
        "CustomPYHookPY": {
          "Ref": "EXTCustomPYHook",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "EXTUiImportLambda",
            "Arn",
          ],
        },
        "photos": {
          "Fn::Sub": "\${ApiUrlName}/examples/photos",
        },
        "version": {
          "Ref": "EXTUiImportVersion",
        },
      },
      "Type": "Custom::ExtensionsUiImport",
    },
    "EXTUiImportLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
            {
              "id": "W58",
              "reason": "This Lambda already has permission to write cloudwatch logs via CFNLambdaRole",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/EXTUiImports.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "EXTUiImportVersion",
          },
        },
        "Environment": {
          "Variables": {
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "ui_import.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "EXTUiImportLambdaLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Ref": "CFNLambdaRole",
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "CustomResource",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "EXTUiImportLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-EXTUiImportLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "EXTUiImportVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/EXTUiImports.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "ExampleCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/examples.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "ExampleJSLambdaQuiz": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CFSTACK": {
              "Ref": "AWS::StackName",
            },
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "js/Quiz.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "QuizLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Example",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExampleJSLambdahook": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CFSTACK": {
              "Ref": "AWS::StackName",
            },
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "js/hook.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "hookLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Example",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExampleLambdaRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambdaVPCAccessExecutionRole",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets",
                    "xray:GetSamplingStatisticSummaries",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "xrayDaemonWriteAccess",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kendra:DescribeIndex",
                    "kendra:ListIndices",
                    "kendra:Query",
                    "kendra:GetQuerySuggestions",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:\${AWS::Partition}:kendra:\${AWS::Region}:\${AWS::AccountId}:index/*",
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "amazonKendraReadOnlyAccess",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Encrypt",
                    "kms:Decrypt",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "QuizKey",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:lambda:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":function:qna-*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:lambda:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":function:QNA-*",
                        ],
                      ],
                    },
                    {
                      "Ref": "QIDLambdaArn",
                    },
                  ],
                },
                {
                  "Action": [
                    "firehose:PutRecord",
                    "firehose:PutRecordBatch",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Ref": "FeedbackKinesisFirehose",
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFeedbackKinesisFirehoseQNALambda",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sns:Publish",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "FeedbackSNS",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SNSQNALambda",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:lambda:*:*:function:qna-*",
                    "arn:aws:lambda:*:*:function:QNA-*",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:lambda:*:*:function:",
                          {
                            "Fn::Select": [
                              "0",
                              {
                                "Fn::Split": [
                                  "-",
                                  {
                                    "Ref": "AWS::StackName",
                                  },
                                ],
                              },
                            ],
                          },
                          "-*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "cloudformation:DescribeStacks",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Ref": "AWS::StackId",
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaQnABotStdExecution",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kendra:SubmitFeedback",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:\${AWS::Partition}:kendra:\${AWS::Region}:\${AWS::AccountId}:index/*",
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "KendraFeedback",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExamplePYTHONLambdaBotBroker": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CFSTACK": {
              "Ref": "AWS::StackName",
            },
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SNS_TOPIC_ARN": {
              "Ref": "FeedbackSNS",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "py/BotBroker.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "BotBrokerLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Example",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExamplePYTHONLambdaConnectCallback": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CFSTACK": {
              "Ref": "AWS::StackName",
            },
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SNS_TOPIC_ARN": {
              "Ref": "FeedbackSNS",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "py/ConnectCallback.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ConnectCallbackLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Example",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExamplePYTHONLambdaFeedback": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CFSTACK": {
              "Ref": "AWS::StackName",
            },
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SNS_TOPIC_ARN": {
              "Ref": "FeedbackSNS",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "py/Feedback.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "FeedbackLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Example",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExamplePYTHONLambdaNext": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CFSTACK": {
              "Ref": "AWS::StackName",
            },
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SNS_TOPIC_ARN": {
              "Ref": "FeedbackSNS",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "py/Next.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "NextLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Example",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExamplePYTHONLambdaPrevious": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CFSTACK": {
              "Ref": "AWS::StackName",
            },
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SNS_TOPIC_ARN": {
              "Ref": "FeedbackSNS",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "py/Previous.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "PreviousLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Example",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExamplePYTHONLambdahello": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CFSTACK": {
              "Ref": "AWS::StackName",
            },
            "ES_ADDRESS": {
              "Ref": "ESAddress",
            },
            "ES_INDEX": {
              "Ref": "Index",
            },
            "FIREHOSE_NAME": {
              "Ref": "FeedbackKinesisFirehoseName",
            },
            "QUIZ_KMS_KEY": {
              "Ref": "QuizKey",
            },
            "SNS_TOPIC_ARN": {
              "Ref": "FeedbackSNS",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "py/hello.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "helloLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Example",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExampleWriteLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
            {
              "id": "W58",
              "reason": "This Lambda already has permission to write cloudwatch logs via CFNLambdaRole",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "BootstrapPrefix",
                },
                "/lambda/examples.zip",
              ],
            ],
          },
          "S3ObjectVersion": {
            "Ref": "ExampleCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "cfn.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ExampleWriteLambdaLogGroup",
          },
        },
        "MemorySize": "128",
        "Role": {
          "Ref": "CFNLambdaRole",
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "CustomResource",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExampleWriteLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-ExampleWriteLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "ExtensionLambdaRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambdaVPCAccessExecutionRole",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets",
                    "xray:GetSamplingStatisticSummaries",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "xrayDaemonWriteAccess",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Encrypt",
                    "kms:Decrypt",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "QuizKey",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:lambda:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":function:qna-*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:lambda:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":function:QNA-*",
                        ],
                      ],
                    },
                    {
                      "Ref": "QIDLambdaArn",
                    },
                  ],
                },
                {
                  "Action": [
                    "firehose:PutRecord",
                    "firehose:PutRecordBatch",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Ref": "FeedbackKinesisFirehose",
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFeedbackKinesisFirehoseQNALambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExtensionsInvokePolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:InvokeFunction",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EXTCreateRecentTopicsResponse",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "EXTCustomJSHook",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "EXTCustomPYHook",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "FulfillmentLambdaRole",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "FeedbackLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "ExamplePYTHONLambdaFeedback",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "FeedbackSNS": {
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sns",
      },
      "Type": "AWS::SNS::Topic",
    },
    "InvokePolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:InvokeFunction",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ExampleJSLambdaQuiz",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExampleJSLambdahook",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExamplePYTHONLambdaBotBroker",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExamplePYTHONLambdaConnectCallback",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExamplePYTHONLambdaFeedback",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExamplePYTHONLambdaNext",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExamplePYTHONLambdaPrevious",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExamplePYTHONLambdahello",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "FulfillmentLambdaRole",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "JsLambdaHookSDKLambdaLayer": {
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs",
        ],
        "Content": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/js_lambda_hook_sdk.zip",
          },
          "S3ObjectVersion": {
            "Ref": "JsLambdaHookSDKLambdaLayerCodeVersion",
          },
        },
        "LayerName": {
          "Fn::Join": [
            "-",
            [
              "JsLambdaHookSDK",
              {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Ref": "DefaultQnABotSettings",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "JsLambdaHookSDKLambdaLayerCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/js_lambda_hook_sdk.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "LambdaHookExamples": {
      "Properties": {
        "BotBrokerPY": {
          "Ref": "ExamplePYTHONLambdaBotBroker",
        },
        "Bucket": {
          "Ref": "AssetBucket",
        },
        "ConnectCallbackPY": {
          "Ref": "ExamplePYTHONLambdaConnectCallback",
        },
        "FeedbackPY": {
          "Ref": "ExamplePYTHONLambdaFeedback",
        },
        "NextPY": {
          "Ref": "ExamplePYTHONLambdaNext",
        },
        "PreviousPY": {
          "Ref": "ExamplePYTHONLambdaPrevious",
        },
        "QuizJS": {
          "Ref": "ExampleJSLambdaQuiz",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "ExampleWriteLambda",
            "Arn",
          ],
        },
        "helloPY": {
          "Ref": "ExamplePYTHONLambdahello",
        },
        "hookJS": {
          "Ref": "ExampleJSLambdahook",
        },
        "photos": {
          "Fn::Sub": "\${ApiUrlName}/examples/photos",
        },
        "version": {
          "Ref": "ExampleCodeVersion",
        },
      },
      "Type": "Custom::QnABotExamples",
    },
    "NextLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "ExamplePYTHONLambdaNext",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "PreviousLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "ExamplePYTHONLambdaPrevious",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "QuizKey": {
      "Properties": {
        "Description": "QNABot Internal KMS CMK for quiz workflow",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Id": "key-default-1",
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Ref": "AWS::AccountId",
                },
              },
              "Resource": "*",
              "Sid": "Allow administration of the key",
            },
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Sub": "arn:aws:iam::\${AWS::AccountId}:root",
                },
              },
              "Resource": "*",
              "Sid": "Enable IAM User Permissions",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
    },
    "QuizLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "ExampleJSLambdaQuiz",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "ResponseBotQNAAgeAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAAgeVersionV2",
        "ResponseBotQNAAgeV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAAgeV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAAgeVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAAgeNoConfirmAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAAgeNoConfirmVersionV2",
        "ResponseBotQNAAgeNoConfirmV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAAgeNoConfirmV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAAgeNoConfirmVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAAgeNoConfirmV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNANumberV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "AgeNoConfirmIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "My age is {Age}",
                  },
                  {
                    "Utterance": "Age is {Age}",
                  },
                  {
                    "Utterance": "It is {Age}",
                  },
                  {
                    "Utterance": "I am {Age}",
                  },
                  {
                    "Utterance": "I am {Age} years old",
                  },
                  {
                    "Utterance": "His age is {Age}",
                  },
                  {
                    "Utterance": "He is {Age}",
                  },
                  {
                    "Utterance": "He is {Age} years old",
                  },
                  {
                    "Utterance": "Her age is {Age}",
                  },
                  {
                    "Utterance": "She is {Age}",
                  },
                  {
                    "Utterance": "She is {Age} years old",
                  },
                  {
                    "Utterance": "{Age}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Age",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Age",
                    "SlotTypeName": "AMAZON.Number",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What age?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Age No Confirm Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAAgeNoConfirmV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAAgeNoConfirmVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNANumberVersionV2",
        "ResponseBotQNAAgeNoConfirmV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAAgeNoConfirmV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAAgeV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNANumberV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the age again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Is {Age} correct (Yes or No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "AgeIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "My age is {Age}",
                  },
                  {
                    "Utterance": "Age is {Age}",
                  },
                  {
                    "Utterance": "It is {Age}",
                  },
                  {
                    "Utterance": "I am {Age}",
                  },
                  {
                    "Utterance": "I am {Age} years old",
                  },
                  {
                    "Utterance": "His age is {Age}",
                  },
                  {
                    "Utterance": "He is {Age}",
                  },
                  {
                    "Utterance": "He is {Age} years old",
                  },
                  {
                    "Utterance": "Her age is {Age}",
                  },
                  {
                    "Utterance": "She is {Age}",
                  },
                  {
                    "Utterance": "She is {Age} years old",
                  },
                  {
                    "Utterance": "{Age}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Age",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Age",
                    "SlotTypeName": "AMAZON.Number",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What age?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Age Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAAgeV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAAgeVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNANumberVersionV2",
        "ResponseBotQNAAgeV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAAgeV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNADateAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNADateVersionV2",
        "ResponseBotQNADateV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNADateV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNADateVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNADateNoConfirmAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNADateNoConfirmVersionV2",
        "ResponseBotQNADateNoConfirmV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNADateNoConfirmV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNADateNoConfirmVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNADateNoConfirmV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAYesNoExitV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "DateNoConfirmIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The date is {date}",
                  },
                  {
                    "Utterance": "The date was {date}",
                  },
                  {
                    "Utterance": "I went on {date}",
                  },
                  {
                    "Utterance": "It is {date}",
                  },
                  {
                    "Utterance": "It occurred on {date}",
                  },
                  {
                    "Utterance": "I was born on {date}",
                  },
                  {
                    "Utterance": "My birthdate is {date}",
                  },
                  {
                    "Utterance": "My date of birth is {date}",
                  },
                  {
                    "Utterance": "{date}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "date",
                  },
                ],
                "Slots": [
                  {
                    "Name": "date",
                    "SlotTypeName": "AMAZON.Date",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What date?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Date Bot (NoConfirm) - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNADateNoConfirmV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNADateNoConfirmVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAYesNoExitVersionV2",
        "ResponseBotQNADateNoConfirmV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNADateNoConfirmV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNADateV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAYesNoExitV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the date again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Is {date} correct (Yes or No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "DateIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The date is {date}",
                  },
                  {
                    "Utterance": "The date was {date}",
                  },
                  {
                    "Utterance": "I went on {date}",
                  },
                  {
                    "Utterance": "It is {date}",
                  },
                  {
                    "Utterance": "It occurred on {date}",
                  },
                  {
                    "Utterance": "I was born on {date}",
                  },
                  {
                    "Utterance": "My birthdate is {date}",
                  },
                  {
                    "Utterance": "My date of birth is {date}",
                  },
                  {
                    "Utterance": "{date}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "date",
                  },
                ],
                "Slots": [
                  {
                    "Name": "date",
                    "SlotTypeName": "AMAZON.Date",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What date?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Date Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNADateV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNADateVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAYesNoExitVersionV2",
        "ResponseBotQNADateV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNADateV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNADayOfWeekAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNADayOfWeekVersionV2",
        "ResponseBotQNADayOfWeekV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNADayOfWeekV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNADayOfWeekVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNADayOfWeekV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAYesNoExitV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the day of the week again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Is {DayOfWeek} correct (Yes or No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "DayOfWeekIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The day is {DayOfWeek}",
                  },
                  {
                    "Utterance": "The day was {DayOfWeek}",
                  },
                  {
                    "Utterance": "I went on {DayOfWeek}",
                  },
                  {
                    "Utterance": "It is {DayOfWeek}",
                  },
                  {
                    "Utterance": "It occurred on {DayOfWeek}",
                  },
                  {
                    "Utterance": "{DayOfWeek}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "DayOfWeek",
                  },
                ],
                "Slots": [
                  {
                    "Name": "DayOfWeek",
                    "SlotTypeName": "QNADayOfWeekSlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What day of the week?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNADayOfWeekSlotType",
                "SlotTypeValues": [
                  {
                    "SampleValue": {
                      "Value": "Sunday",
                    },
                    "Synonyms": [
                      {
                        "Value": "Su",
                      },
                      {
                        "Value": "Sun",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "Monday",
                    },
                    "Synonyms": [
                      {
                        "Value": "M",
                      },
                      {
                        "Value": "Mo",
                      },
                      {
                        "Value": "Mon",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "Tuesday",
                    },
                    "Synonyms": [
                      {
                        "Value": "Tu",
                      },
                      {
                        "Value": "Tue",
                      },
                      {
                        "Value": "Tues",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "Wednesday",
                    },
                    "Synonyms": [
                      {
                        "Value": "W",
                      },
                      {
                        "Value": "We",
                      },
                      {
                        "Value": "Wed",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "Thursday",
                    },
                    "Synonyms": [
                      {
                        "Value": "Th",
                      },
                      {
                        "Value": "Thu",
                      },
                      {
                        "Value": "Thurs",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "Friday",
                    },
                    "Synonyms": [
                      {
                        "Value": "F",
                      },
                      {
                        "Value": "Fr",
                      },
                      {
                        "Value": "Fri",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "Saturday",
                    },
                    "Synonyms": [
                      {
                        "Value": "Sa",
                      },
                      {
                        "Value": "Sat",
                      },
                    ],
                  },
                ],
                "ValueSelectionSetting": {
                  "ResolutionStrategy": "TOP_RESOLUTION",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA DayOfWeek Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNADayOfWeekV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNADayOfWeekVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAYesNoExitVersionV2",
        "ResponseBotQNADayOfWeekV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNADayOfWeekV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAEmailAddressAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAEmailAddressVersionV2",
        "ResponseBotQNAEmailAddressV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAEmailAddressV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAEmailAddressVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAEmailAddressV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNATimeV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the email address again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Is {EmailAddress} correct (Yes or No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "EmailAddressIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "My email address is {EmailAddress}",
                  },
                  {
                    "Utterance": "The email address is {EmailAddress}",
                  },
                  {
                    "Utterance": "{EmailAddress}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "EmailAddress",
                  },
                ],
                "Slots": [
                  {
                    "Name": "EmailAddress",
                    "SlotTypeName": "AMAZON.EmailAddress",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What email address?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Email Address Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAEmailAddressV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAEmailAddressVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNATimeVersionV2",
        "ResponseBotQNAEmailAddressV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAEmailAddressV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAMonthAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAMonthVersionV2",
        "ResponseBotQNAMonthV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAMonthV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAMonthVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAMonthNoConfirmAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAMonthNoConfirmVersionV2",
        "ResponseBotQNAMonthNoConfirmV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAMonthNoConfirmV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAMonthNoConfirmVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAMonthNoConfirmV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNADayOfWeekV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "MonthNoConfirmIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The month is {Month}",
                  },
                  {
                    "Utterance": "The day was {Month}",
                  },
                  {
                    "Utterance": "It is {Month}",
                  },
                  {
                    "Utterance": "It occurred on {Month}",
                  },
                  {
                    "Utterance": "{Month}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Month",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Month",
                    "SlotTypeName": "QNAMonthNoConfirmSlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What month?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNAMonthNoConfirmSlotType",
                "SlotTypeValues": [
                  {
                    "SampleValue": {
                      "Value": "January",
                    },
                    "Synonyms": [
                      {
                        "Value": "Jan",
                      },
                      {
                        "Value": "01",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "February",
                    },
                    "Synonyms": [
                      {
                        "Value": "Feb",
                      },
                      {
                        "Value": "02",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "March",
                    },
                    "Synonyms": [
                      {
                        "Value": "Mar",
                      },
                      {
                        "Value": "03",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "April",
                    },
                    "Synonyms": [
                      {
                        "Value": "Apr",
                      },
                      {
                        "Value": "04",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "May",
                    },
                    "Synonyms": [
                      {
                        "Value": "05",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "June",
                    },
                    "Synonyms": [
                      {
                        "Value": "Jun",
                      },
                      {
                        "Value": "06",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "July",
                    },
                    "Synonyms": [
                      {
                        "Value": "Jul",
                      },
                      {
                        "Value": "07",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "August",
                    },
                    "Synonyms": [
                      {
                        "Value": "Aug",
                      },
                      {
                        "Value": "08",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "September",
                    },
                    "Synonyms": [
                      {
                        "Value": "Sep",
                      },
                      {
                        "Value": "Sept",
                      },
                      {
                        "Value": "09",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "October",
                    },
                    "Synonyms": [
                      {
                        "Value": "Oct",
                      },
                      {
                        "Value": "10",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "November",
                    },
                    "Synonyms": [
                      {
                        "Value": "Nov",
                      },
                      {
                        "Value": "11",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "December",
                    },
                    "Synonyms": [
                      {
                        "Value": "Dec",
                      },
                      {
                        "Value": "12",
                      },
                    ],
                  },
                ],
                "ValueSelectionSetting": {
                  "ResolutionStrategy": "TOP_RESOLUTION",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Month Bot (NoConfirm) - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAMonthNoConfirmV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAMonthNoConfirmVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNADayOfWeekVersionV2",
        "ResponseBotQNAMonthNoConfirmV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAMonthNoConfirmV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAMonthV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNADayOfWeekV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the month again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Is {Month} correct (Yes or No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "MonthIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The month is {Month}",
                  },
                  {
                    "Utterance": "The day was {Month}",
                  },
                  {
                    "Utterance": "It is {Month}",
                  },
                  {
                    "Utterance": "It occurred on {Month}",
                  },
                  {
                    "Utterance": "{Month}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Month",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Month",
                    "SlotTypeName": "QNAMonthSlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What month?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNAMonthSlotType",
                "SlotTypeValues": [
                  {
                    "SampleValue": {
                      "Value": "January",
                    },
                    "Synonyms": [
                      {
                        "Value": "Jan",
                      },
                      {
                        "Value": "01",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "February",
                    },
                    "Synonyms": [
                      {
                        "Value": "Feb",
                      },
                      {
                        "Value": "02",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "March",
                    },
                    "Synonyms": [
                      {
                        "Value": "Mar",
                      },
                      {
                        "Value": "03",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "April",
                    },
                    "Synonyms": [
                      {
                        "Value": "Apr",
                      },
                      {
                        "Value": "04",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "May",
                    },
                    "Synonyms": [
                      {
                        "Value": "05",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "June",
                    },
                    "Synonyms": [
                      {
                        "Value": "Jun",
                      },
                      {
                        "Value": "06",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "July",
                    },
                    "Synonyms": [
                      {
                        "Value": "Jul",
                      },
                      {
                        "Value": "07",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "August",
                    },
                    "Synonyms": [
                      {
                        "Value": "Aug",
                      },
                      {
                        "Value": "08",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "September",
                    },
                    "Synonyms": [
                      {
                        "Value": "Sep",
                      },
                      {
                        "Value": "Sept",
                      },
                      {
                        "Value": "09",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "October",
                    },
                    "Synonyms": [
                      {
                        "Value": "Oct",
                      },
                      {
                        "Value": "10",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "November",
                    },
                    "Synonyms": [
                      {
                        "Value": "Nov",
                      },
                      {
                        "Value": "11",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "December",
                    },
                    "Synonyms": [
                      {
                        "Value": "Dec",
                      },
                      {
                        "Value": "12",
                      },
                    ],
                  },
                ],
                "ValueSelectionSetting": {
                  "ResolutionStrategy": "TOP_RESOLUTION",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Month Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAMonthV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAMonthVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNADayOfWeekVersionV2",
        "ResponseBotQNAMonthV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAMonthV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNANameAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNANameVersionV2",
        "ResponseBotQNANameV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNANameV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNANameVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNANameV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNATimeV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know your name again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Did I get your name right (Yes or No) {FirstName} {LastName}?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "NameIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "My last name is {LastName}",
                  },
                  {
                    "Utterance": "My first name is {FirstName}",
                  },
                  {
                    "Utterance": "My first name is {FirstName} and My last name is {LastName}",
                  },
                  {
                    "Utterance": "My name is {FirstName} {LastName}",
                  },
                  {
                    "Utterance": "I am {FirstName} {LastName}",
                  },
                  {
                    "Utterance": "{FirstName} {LastName}",
                  },
                  {
                    "Utterance": "{FirstName}",
                  },
                  {
                    "Utterance": "{LastName}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 2,
                    "SlotName": "LastName",
                  },
                  {
                    "Priority": 1,
                    "SlotName": "FirstName",
                  },
                ],
                "Slots": [
                  {
                    "Name": "FirstName",
                    "SlotTypeName": "AMAZON.FirstName",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What is your first name?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                  {
                    "Name": "LastName",
                    "SlotTypeName": "AMAZON.LastName",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What is your last name?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Name Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNANameV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNANameVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNATimeVersionV2",
        "ResponseBotQNANameV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNANameV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNANumberAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNANumberVersionV2",
        "ResponseBotQNANumberV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNANumberV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNANumberVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNANumberNoConfirmAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNANumberNoConfirmVersionV2",
        "ResponseBotQNANumberNoConfirmV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNANumberNoConfirmV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNANumberNoConfirmVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNANumberNoConfirmV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNANumberV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "NumberNoConfirmIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The number is {Number}",
                  },
                  {
                    "Utterance": "The number was {Number}",
                  },
                  {
                    "Utterance": "It is {Number}",
                  },
                  {
                    "Utterance": "{Number}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Number",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Number",
                    "SlotTypeName": "AMAZON.Number",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What number?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Number Bot (NoConfirm) - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNANumberNoConfirmV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNANumberNoConfirmVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNANumberVersionV2",
        "ResponseBotQNANumberNoConfirmV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNANumberNoConfirmV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNANumberV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNADayOfWeekV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the number again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "<speak>Is <say-as interpret-as="digits">{Number}</say-as> correct (Yes or No)?</speak>",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "NumberIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The number is {Number}",
                  },
                  {
                    "Utterance": "The number was {Number}",
                  },
                  {
                    "Utterance": "It is {Number}",
                  },
                  {
                    "Utterance": "{Number}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Number",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Number",
                    "SlotTypeName": "AMAZON.Number",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What  number?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Number Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNANumberV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNANumberVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNADayOfWeekVersionV2",
        "ResponseBotQNANumberV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNANumberV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAPhoneNumberAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAPhoneNumberVersionV2",
        "ResponseBotQNAPhoneNumberV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAPhoneNumberV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAPhoneNumberVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAPhoneNumberNoConfirmAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAPhoneNumberNoConfirmVersionV2",
        "ResponseBotQNAPhoneNumberNoConfirmV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAPhoneNumberNoConfirmV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAPhoneNumberNoConfirmVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAPhoneNumberNoConfirmV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAAgeNoConfirmV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "NumberNoConfirmIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The phone number is {PhoneNumber}",
                  },
                  {
                    "Utterance": "My phone number is {PhoneNumber}",
                  },
                  {
                    "Utterance": "It is {PhoneNumber}",
                  },
                  {
                    "Utterance": "{PhoneNumber}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "PhoneNumber",
                  },
                ],
                "Slots": [
                  {
                    "Name": "PhoneNumber",
                    "SlotTypeName": "AMAZON.PhoneNumber",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What phone number?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Phone Number Bot (NoConfirm) - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAPhoneNumberNoConfirmV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAPhoneNumberNoConfirmVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAAgeNoConfirmVersionV2",
        "ResponseBotQNAPhoneNumberNoConfirmV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAPhoneNumberNoConfirmV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAPhoneNumberV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAAgeNoConfirmV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the phone number again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "<speak>Is <say-as interpret-as="telephone">{PhoneNumber}</say-as> correct (Yes or No)?</speak>",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "PhoneNumberIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The phone number is {PhoneNumber}",
                  },
                  {
                    "Utterance": "My phone number is {PhoneNumber}",
                  },
                  {
                    "Utterance": "It is {PhoneNumber}",
                  },
                  {
                    "Utterance": "{PhoneNumber}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "PhoneNumber",
                  },
                ],
                "Slots": [
                  {
                    "Name": "PhoneNumber",
                    "SlotTypeName": "AMAZON.PhoneNumber",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What phone number?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Phone Number Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAPhoneNumberV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAPhoneNumberVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAAgeNoConfirmVersionV2",
        "ResponseBotQNAPhoneNumberV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAPhoneNumberV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAPinAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAPinVersionV2",
        "ResponseBotQNAPinV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAPinV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAPinVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAPinNoConfirmAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAPinNoConfirmVersionV2",
        "ResponseBotQNAPinNoConfirmV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAPinNoConfirmV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAPinNoConfirmVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAPinNoConfirmV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAPinV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "PINNoConfirmIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The pin number is {Pin}",
                  },
                  {
                    "Utterance": "My pin number is {Pin}",
                  },
                  {
                    "Utterance": "It is {Pin}",
                  },
                  {
                    "Utterance": "{Pin}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Pin",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Pin",
                    "SlotTypeName": "QNAPinNoConfirmSlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What are all the digits?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNAPinNoConfirmSlotType",
                "ParentSlotTypeSignature": "AMAZON.AlphaNumeric",
                "ValueSelectionSetting": {
                  "RegexFilter": {
                    "Pattern": "[0-9]{4}",
                  },
                  "ResolutionStrategy": "ORIGINAL_VALUE",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA PIN Bot (NoConfirm) - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAPinNoConfirmV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAPinNoConfirmVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAPinVersionV2",
        "ResponseBotQNAPinNoConfirmV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAPinNoConfirmV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAPinV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "I'm sorry I did not get all the digits, please re-enter all digits.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "<speak>Is <say-as interpret-as="digits">{Pin}</say-as> correct (Yes or No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "PINIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The pin number is {Pin}",
                  },
                  {
                    "Utterance": "My pin number is {Pin}",
                  },
                  {
                    "Utterance": "It is {Pin}",
                  },
                  {
                    "Utterance": "{Pin}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Pin",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Pin",
                    "SlotTypeName": "QNAPinSlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What are all the digits?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNAPinSlotType",
                "ParentSlotTypeSignature": "AMAZON.AlphaNumeric",
                "ValueSelectionSetting": {
                  "RegexFilter": {
                    "Pattern": "[0-9]{4}",
                  },
                  "ResolutionStrategy": "ORIGINAL_VALUE",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA PIN Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAPinV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAPinVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": "ResponseBotQNAPinV2",
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAPinV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNASocialSecurityAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNASocialSecurityVersionV2",
        "ResponseBotQNASocialSecurityV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNASocialSecurityV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNASocialSecurityVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNASocialSecurityV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the social security number again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Is {SSN} correct (Yes/No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "SocialSecurityIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The social security number is {SSN}",
                  },
                  {
                    "Utterance": "My social security number is {SSN}",
                  },
                  {
                    "Utterance": "It is {SSN}",
                  },
                  {
                    "Utterance": "{SSN}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "SSN",
                  },
                ],
                "Slots": [
                  {
                    "Name": "SSN",
                    "SlotTypeName": "QNASocialSecuritySlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What is your social security number?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNASocialSecuritySlotType",
                "ParentSlotTypeSignature": "AMAZON.AlphaNumeric",
                "ValueSelectionSetting": {
                  "RegexFilter": {
                    "Pattern": "[0-9]{3}-[0-9]{2}-[0-9]{4}",
                  },
                  "ResolutionStrategy": "ORIGINAL_VALUE",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA SocialSecurity Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNASocialSecurityV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNASocialSecurityVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": "ResponseBotQNASocialSecurityV2",
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNASocialSecurityV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNATimeAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNATimeVersionV2",
        "ResponseBotQNATimeV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNATimeV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNATimeVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNATimeV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAAgeNoConfirmV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please let me know the time again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Is {Time} correct (Yes or No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "TimeIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "The time was {Time}",
                  },
                  {
                    "Utterance": "The time is {Time}",
                  },
                  {
                    "Utterance": "It occurred at {Time}",
                  },
                  {
                    "Utterance": "At {Time}",
                  },
                  {
                    "Utterance": "{Time}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Time",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Time",
                    "SlotTypeName": "AMAZON.Time",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What time?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Time Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNATimeV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNATimeVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAAgeNoConfirmVersionV2",
        "ResponseBotQNATimeV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNATimeV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAWageAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAWageVersionV2",
        "ResponseBotQNAWageV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAWageV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAWageVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAWageV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": "BotRuntimeRole",
      "Properties": {
        "AutoBuildBotLocales": true,
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "IntentConfirmationSetting": {
                  "DeclinationResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Please tell me your wage again.",
                          },
                        },
                      },
                    ],
                  },
                  "PromptSpecification": {
                    "MaxRetries": 1,
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "Is {Wage} correct (Yes/No)?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "WageIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "My salary is {Wage}",
                  },
                  {
                    "Utterance": "My wage is {Wage}",
                  },
                  {
                    "Utterance": "{Wage}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Wage",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Wage",
                    "SlotTypeName": "QNAWageSlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "What is your wage?",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNAWageSlotType",
                "ParentSlotTypeSignature": "AMAZON.AlphaNumeric",
                "ValueSelectionSetting": {
                  "RegexFilter": {
                    "Pattern": "[0-9]{1,7}",
                  },
                  "ResolutionStrategy": "ORIGINAL_VALUE",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Wage Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": 300,
        "Name": {
          "Fn::Sub": "ResponseBot-QNAWageV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAWageVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAWageV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAWageV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAYesNoAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAYesNoVersionV2",
        "ResponseBotQNAYesNoV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAYesNoV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAYesNoVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAYesNoExitAliasV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAYesNoExitVersionV2",
        "ResponseBotQNAYesNoExitV2",
      ],
      "Properties": {
        "BotAliasLocaleSettings": [
          {
            "BotAliasLocaleSetting": {
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "live",
        "BotId": {
          "Ref": "ResponseBotQNAYesNoExitV2",
        },
        "BotVersion": {
          "Fn::GetAtt": [
            "ResponseBotQNAYesNoExitVersionV2",
            "BotVersion",
          ],
        },
        "SentimentAnalysisSettings": {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "ResponseBotQNAYesNoExitV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAPinV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "YesNoExitIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "{Yes_No_Exit}",
                  },
                  {
                    "Utterance": "I said {Yes_No_Exit}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Yes_No_Exit",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Yes_No_Exit",
                    "SlotTypeName": "QNAYesNoExitSlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "Say Yes, No, or Exit.",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNAYesNoExitSlotType",
                "SlotTypeValues": [
                  {
                    "SampleValue": {
                      "Value": "Yes",
                    },
                    "Synonyms": [
                      {
                        "Value": "Yes",
                      },
                      {
                        "Value": "OK",
                      },
                      {
                        "Value": "yeah",
                      },
                      {
                        "Value": "sure",
                      },
                      {
                        "Value": "yep",
                      },
                      {
                        "Value": "affirmative",
                      },
                      {
                        "Value": "aye",
                      },
                      {
                        "Value": "correct",
                      },
                      {
                        "Value": "one",
                      },
                      {
                        "Value": "1",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "No",
                    },
                    "Synonyms": [
                      {
                        "Value": "no",
                      },
                      {
                        "Value": "nope",
                      },
                      {
                        "Value": "na",
                      },
                      {
                        "Value": "negative",
                      },
                      {
                        "Value": "non",
                      },
                      {
                        "Value": "incorrect",
                      },
                      {
                        "Value": "Two",
                      },
                      {
                        "Value": "2",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "Exit",
                    },
                    "Synonyms": [
                      {
                        "Value": "agent",
                      },
                      {
                        "Value": "rep",
                      },
                      {
                        "Value": "representative",
                      },
                      {
                        "Value": "stop",
                      },
                      {
                        "Value": "quit",
                      },
                      {
                        "Value": "help",
                      },
                      {
                        "Value": "bye",
                      },
                      {
                        "Value": "goodbye",
                      },
                      {
                        "Value": "three",
                      },
                      {
                        "Value": "3",
                      },
                    ],
                  },
                ],
                "ValueSelectionSetting": {
                  "ResolutionStrategy": "TOP_RESOLUTION",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Yes No Exit Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAYesNoExitV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAYesNoExitVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAPinVersionV2",
        "ResponseBotQNAYesNoExitV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAYesNoExitV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ResponseBotQNAYesNoV2": {
      "Condition": "CreateLexResponseBots",
      "DependsOn": [
        "BotRuntimeRole",
        "ResponseBotQNAPinV2",
      ],
      "Properties": {
        "BotLocales": [
          {
            "Intents": [
              {
                "IntentClosingSetting": {
                  "ClosingResponse": {
                    "MessageGroupsList": [
                      {
                        "Message": {
                          "PlainTextMessage": {
                            "Value": "OK. ",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "YesNoIntent",
                "SampleUtterances": [
                  {
                    "Utterance": "{Yes_No}",
                  },
                  {
                    "Utterance": "I said {Yes_No}",
                  },
                ],
                "SlotPriorities": [
                  {
                    "Priority": 1,
                    "SlotName": "Yes_No",
                  },
                ],
                "Slots": [
                  {
                    "Name": "Yes_No",
                    "SlotTypeName": "QNAYesNoSlotType",
                    "ValueElicitationSetting": {
                      "PromptSpecification": {
                        "AllowInterrupt": true,
                        "MaxRetries": 2,
                        "MessageGroupsList": [
                          {
                            "Message": {
                              "PlainTextMessage": {
                                "Value": "Say Yes or No.",
                              },
                            },
                          },
                        ],
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              {
                "Description": "Default intent when no other intent matches",
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": "0.40",
            "SlotTypes": [
              {
                "Name": "QNAYesNoSlotType",
                "SlotTypeValues": [
                  {
                    "SampleValue": {
                      "Value": "Yes",
                    },
                    "Synonyms": [
                      {
                        "Value": "Yes",
                      },
                      {
                        "Value": "OK",
                      },
                      {
                        "Value": "yeah",
                      },
                      {
                        "Value": "sure",
                      },
                      {
                        "Value": "yep",
                      },
                      {
                        "Value": "affirmative",
                      },
                      {
                        "Value": "aye",
                      },
                      {
                        "Value": "correct",
                      },
                      {
                        "Value": "one",
                      },
                      {
                        "Value": "1",
                      },
                    ],
                  },
                  {
                    "SampleValue": {
                      "Value": "No",
                    },
                    "Synonyms": [
                      {
                        "Value": "no",
                      },
                      {
                        "Value": "nope",
                      },
                      {
                        "Value": "na",
                      },
                      {
                        "Value": "negative",
                      },
                      {
                        "Value": "non",
                      },
                      {
                        "Value": "incorrect",
                      },
                      {
                        "Value": "Two",
                      },
                      {
                        "Value": "2",
                      },
                    ],
                  },
                ],
                "ValueSelectionSetting": {
                  "ResolutionStrategy": "TOP_RESOLUTION",
                },
              },
            ],
            "VoiceSettings": {
              "VoiceId": "Salli",
            },
          },
        ],
        "DataPrivacy": {
          "ChildDirected": false,
        },
        "Description": "QNA Yes No Bot - x.x.x - v2",
        "IdleSessionTTLInSeconds": "300",
        "Name": {
          "Fn::Sub": "ResponseBot-QNAYesNoV2-\${AWS::StackName}",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BotRuntimeRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "ResponseBotQNAYesNoVersionV2": {
      "Condition": "CreateLexResponseBots",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ResponseBotQNAPinVersionV2",
        "ResponseBotQNAYesNoV2",
      ],
      "Properties": {
        "BotId": {
          "Ref": "ResponseBotQNAYesNoV2",
        },
        "BotVersionLocaleSpecification": [
          {
            "BotVersionLocaleDetails": {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "feedbacksnspolicy": {
      "Properties": {
        "PolicyDocument": {
          "Id": "MysnsTopicPolicy",
          "Statement": [
            {
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Sub": "\${AWS::AccountId}",
                },
              },
              "Resource": [
                {
                  "Fn::Sub": "arn:\${AWS::Partition}:sns:\${AWS::Region}:\${AWS::AccountId}:*",
                },
              ],
              "Sid": "My-statement-id",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "FeedbackSNS",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "helloLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "ExamplePYTHONLambdahello",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "hookLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}",
              },
              "ExampleJSLambdahook",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
  },
}
`;
