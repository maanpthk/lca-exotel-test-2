// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders import template correctly 1`] = `
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "EmbeddingsBedrock": {
      "Fn::Equals": [
        {
          "Ref": "EmbeddingsApi",
        },
        "BEDROCK",
      ],
    },
    "EmbeddingsLambdaArn": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "EmbeddingsLambdaArn",
            },
            "",
          ],
        },
      ],
    },
    "EmbeddingsSagemaker": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "EmbeddingsSagemakerEndpointArn",
            },
            "",
          ],
        },
      ],
    },
    "LogRetentionPeriodIsNotZero": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "LogRetentionPeriod",
            },
            0,
          ],
        },
      ],
    },
    "VPCEnabled": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Ref": "VPCSecurityGroupIdList",
            },
          ],
        },
      ],
    },
    "XRAYEnabled": {
      "Fn::Equals": [
        {
          "Ref": "XraySetting",
        },
        "TRUE",
      ],
    },
  },
  "Description": "(SO0189n-import) QnABot nested import resources - Version vx.x.x",
  "Outputs": {},
  "Parameters": {
    "AwsSdkLayerLambdaLayer": {
      "Type": "String",
    },
    "BootstrapBucket": {
      "Type": "String",
    },
    "BootstrapPrefix": {
      "Type": "String",
    },
    "CFNInvokePolicy": {
      "Type": "String",
    },
    "CFNLambda": {
      "Type": "String",
    },
    "CommonModulesLambdaLayer": {
      "Type": "String",
    },
    "ContentDesignerOutputBucket": {
      "Type": "String",
    },
    "CustomQnABotSettings": {
      "Type": "String",
    },
    "DefaultQnABotSettings": {
      "Type": "String",
    },
    "EmbeddingsApi": {
      "Type": "String",
    },
    "EmbeddingsBedrockModelId": {
      "Type": "String",
    },
    "EmbeddingsLambdaArn": {
      "Type": "String",
    },
    "EmbeddingsLambdaDimensions": {
      "Type": "String",
    },
    "EmbeddingsSagemakerEndpoint": {
      "Type": "String",
    },
    "EmbeddingsSagemakerEndpointArn": {
      "Type": "String",
    },
    "EsArn": {
      "Type": "String",
    },
    "EsEndpoint": {
      "Type": "String",
    },
    "EsProxyLambda": {
      "Type": "String",
    },
    "EsProxyLambdaLayer": {
      "Type": "String",
    },
    "ExportBucket": {
      "Type": "String",
    },
    "FeedbackIndex": {
      "Type": "String",
    },
    "ImportBucket": {
      "Type": "String",
    },
    "LogRetentionPeriod": {
      "Type": "Number",
    },
    "MetricsIndex": {
      "Type": "String",
    },
    "PrivateQnABotSettings": {
      "Type": "String",
    },
    "QnABotCommonLambdaLayer": {
      "Type": "String",
    },
    "S3Clean": {
      "Type": "String",
    },
    "VPCSecurityGroupIdList": {
      "Type": "String",
    },
    "VPCSubnetIdList": {
      "Type": "String",
    },
    "VarIndex": {
      "Type": "String",
    },
    "XraySetting": {
      "Type": "String",
    },
  },
  "Resources": {
    "ImportClean": {
      "DependsOn": [
        "ImportPolicy",
      ],
      "Properties": {
        "Bucket": {
          "Ref": "ImportBucket",
        },
        "ServiceToken": {
          "Ref": "S3Clean",
        },
      },
      "Type": "Custom::S3Clean",
    },
    "ImportCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/import.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "ImportPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:DeleteObject",
                "s3:DeleteObjectVersion",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::\${ImportBucket}*",
                },
                {
                  "Fn::Sub": "arn:aws:s3:::\${ContentDesignerOutputBucket}*",
                },
              ],
            },
            {
              "Action": [
                "lambda:InvokeFunction",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Ref": "EsProxyLambda",
                },
                {
                  "Fn::If": [
                    "EmbeddingsLambdaArn",
                    {
                      "Ref": "EmbeddingsLambdaArn",
                    },
                    {
                      "Ref": "AWS::NoValue",
                    },
                  ],
                },
              ],
            },
            {
              "Action": [
                "es:ESHttpPost",
                "es:ESHttpPut",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "EsArn",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "ImportRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "ImportPolicy",
          },
        ],
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambdaVPCAccessExecutionRole",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets",
                    "xray:GetSamplingStatisticSummaries",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "xrayDaemonWriteAccess",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ssm:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":parameter/",
                          {
                            "Ref": "CustomQnABotSettings",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ssm:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":parameter/",
                          {
                            "Ref": "DefaultQnABotSettings",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ssm:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":parameter/",
                          {
                            "Ref": "PrivateQnABotSettings",
                          },
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SSMGetParameterAccess",
          },
          {
            "Fn::If": [
              "EmbeddingsSagemaker",
              {
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": [
                        "sagemaker:InvokeEndpoint",
                      ],
                      "Effect": "Allow",
                      "Resource": {
                        "Ref": "EmbeddingsSagemakerEndpointArn",
                      },
                    },
                  ],
                  "Version": "2012-10-17",
                },
                "PolicyName": "SagemakerEmbeddingsPolicy",
              },
              {
                "Ref": "AWS::NoValue",
              },
            ],
          },
          {
            "Fn::If": [
              "EmbeddingsBedrock",
              {
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": [
                        "bedrock:InvokeModel",
                      ],
                      "Effect": "Allow",
                      "Resource": [
                        {
                          "Fn::Sub": "arn:\${AWS::Partition}:bedrock:\${AWS::Region}::foundation-model/amazon.titan-embed-text-v1",
                        },
                        {
                          "Fn::Sub": "arn:\${AWS::Partition}:bedrock:\${AWS::Region}::foundation-model/cohere.embed-english-v3",
                        },
                        {
                          "Fn::Sub": "arn:\${AWS::Partition}:bedrock:\${AWS::Region}::foundation-model/cohere.embed-multilingual-v3",
                        },
                        {
                          "Fn::Sub": "arn:\${AWS::Partition}:bedrock:\${AWS::Region}::foundation-model/amazon.titan-embed-text-v2:0",
                        },
                      ],
                    },
                  ],
                  "Version": "2012-10-17",
                },
                "PolicyName": "BedrockEmbeddingsPolicy",
              },
              {
                "Ref": "AWS::NoValue",
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ImportStartLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/import.zip",
          },
          "S3ObjectVersion": {
            "Ref": "ImportCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CUSTOM_SETTINGS_PARAM": {
              "Ref": "CustomQnABotSettings",
            },
            "DEFAULT_SETTINGS_PARAM": {
              "Ref": "DefaultQnABotSettings",
            },
            "ES_ENDPOINT": {
              "Ref": "EsEndpoint",
            },
            "ES_FEEDBACKINDEX": {
              "Ref": "FeedbackIndex",
            },
            "ES_INDEX": {
              "Ref": "VarIndex",
            },
            "ES_METRICSINDEX": {
              "Ref": "MetricsIndex",
            },
            "ES_PROXY": {
              "Ref": "EsProxyLambda",
            },
            "OUTPUT_S3_BUCKET": {
              "Ref": "ContentDesignerOutputBucket",
            },
            "PRIVATE_SETTINGS_PARAM": {
              "Ref": "PrivateQnABotSettings",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
            "STRIDE": "20000",
          },
        },
        "Handler": "index.start",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
          {
            "Ref": "CommonModulesLambdaLayer",
          },
          {
            "Ref": "EsProxyLambdaLayer",
          },
          {
            "Ref": "QnABotCommonLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ImportStartLambdaLogGroup",
          },
        },
        "MemorySize": "1024",
        "Role": {
          "Fn::GetAtt": [
            "ImportRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Import",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ImportStartLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-ImportStartLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "ImportStartPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ImportStartLambda",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::Sub": "arn:aws:s3:::\${ImportBucket}",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ImportStepLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/import.zip",
          },
          "S3ObjectVersion": {
            "Ref": "ImportCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CUSTOM_SETTINGS_PARAM": {
              "Ref": "CustomQnABotSettings",
            },
            "DEFAULT_SETTINGS_PARAM": {
              "Ref": "DefaultQnABotSettings",
            },
            "EMBEDDINGS_API": {
              "Ref": "EmbeddingsApi",
            },
            "EMBEDDINGS_LAMBDA_ARN": {
              "Ref": "EmbeddingsLambdaArn",
            },
            "EMBEDDINGS_SAGEMAKER_ENDPOINT": {
              "Ref": "EmbeddingsSagemakerEndpoint",
            },
            "ES_ENDPOINT": {
              "Ref": "EsEndpoint",
            },
            "ES_FEEDBACKINDEX": {
              "Ref": "FeedbackIndex",
            },
            "ES_INDEX": {
              "Ref": "VarIndex",
            },
            "ES_METRICSINDEX": {
              "Ref": "MetricsIndex",
            },
            "ES_PROXY": {
              "Ref": "EsProxyLambda",
            },
            "OUTPUT_S3_BUCKET": {
              "Ref": "ContentDesignerOutputBucket",
            },
            "PRIVATE_SETTINGS_PARAM": {
              "Ref": "PrivateQnABotSettings",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "index.step",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
          {
            "Ref": "CommonModulesLambdaLayer",
          },
          {
            "Ref": "EsProxyLambdaLayer",
          },
          {
            "Ref": "QnABotCommonLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ImportStepLambdaLogGroup",
          },
        },
        "MemorySize": "1024",
        "Role": {
          "Fn::GetAtt": [
            "ImportRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Import",
          },
        ],
        "Timeout": 900,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ImportStepLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-ImportStepLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "ImportStepPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ImportStepLambda",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::Sub": "arn:aws:s3:::\${ImportBucket}",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ImportTriggerFromS3": {
      "Properties": {
        "Bucket": {
          "Ref": "ImportBucket",
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*",
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "prefix",
                      "Value": "data",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "ImportStartLambda",
                  "Arn",
                ],
              },
            },
            {
              "Events": [
                "s3:ObjectCreated:*",
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "prefix",
                      "Value": "status",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "ImportStepLambda",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Lambda",
    },
    "PostUpgradeImport": {
      "DependsOn": [
        "ImportStepLambda",
      ],
      "Properties": {
        "POST_UPGRADE_IMPORT_TRIGGERS": {
          "Fn::Sub": "\${EmbeddingsApi} \${EmbeddingsBedrockModelId} \${EmbeddingsLambdaDimensions} \${EmbeddingsLambdaArn} \${EmbeddingsSagemakerEndpoint}",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
        "contentDesignerOutputBucket": {
          "Ref": "ContentDesignerOutputBucket",
        },
        "es_endpoint": {
          "Ref": "EsEndpoint",
        },
        "exportbucket": {
          "Ref": "ExportBucket",
        },
        "id": "ExportAll_QnABot_vx.x.x.json",
        "importbucket": {
          "Ref": "ImportBucket",
        },
        "index": {
          "Ref": "VarIndex",
        },
      },
      "Type": "Custom::PostUpgradeImport",
    },
    "PostUpgradeImportFeedback": {
      "DependsOn": [
        "ImportStepLambda",
      ],
      "Properties": {
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
        "contentDesignerOutputBucket": {
          "Ref": "ContentDesignerOutputBucket",
        },
        "es_endpoint": {
          "Ref": "EsEndpoint",
        },
        "exportbucket": {
          "Ref": "ExportBucket",
        },
        "id": "ExportAll_QnABot_vx.x.x_feedback.json",
        "importbucket": {
          "Ref": "ImportBucket",
        },
        "index": {
          "Ref": "FeedbackIndex",
        },
      },
      "Type": "Custom::PostUpgradeImport",
    },
    "PostUpgradeImportMetrics": {
      "DependsOn": [
        "ImportStepLambda",
      ],
      "Properties": {
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
        "contentDesignerOutputBucket": {
          "Ref": "ContentDesignerOutputBucket",
        },
        "es_endpoint": {
          "Ref": "EsEndpoint",
        },
        "exportbucket": {
          "Ref": "ExportBucket",
        },
        "id": "ExportAll_QnABot_vx.x.x_metrics.json",
        "importbucket": {
          "Ref": "ImportBucket",
        },
        "index": {
          "Ref": "MetricsIndex",
        },
      },
      "Type": "Custom::PostUpgradeImport",
    },
  },
}
`;
