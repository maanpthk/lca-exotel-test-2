// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders export template correctly 1`] = `
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "CreateKendraCrawlerPolicy": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "KendraWebPageIndexId",
            },
            "",
          ],
        },
      ],
    },
    "CreateKendraSyncPolicy": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "KendraFaqIndexId",
            },
            "",
          ],
        },
      ],
    },
    "LogRetentionPeriodIsNotZero": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "LogRetentionPeriod",
            },
            0,
          ],
        },
      ],
    },
    "VPCEnabled": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Ref": "VPCSecurityGroupIdList",
            },
          ],
        },
      ],
    },
    "XRAYEnabled": {
      "Fn::Equals": [
        {
          "Ref": "XraySetting",
        },
        "TRUE",
      ],
    },
  },
  "Description": "(SO0189n-export) QnABot nested export resources - Version vx.x.x",
  "Outputs": {},
  "Parameters": {
    "Api": {
      "Type": "String",
    },
    "ApiDeploymentId": {
      "Type": "String",
    },
    "ApiRootResourceId": {
      "Type": "String",
    },
    "AwsSdkLayerLambdaLayer": {
      "Type": "String",
    },
    "BootstrapBucket": {
      "Type": "String",
    },
    "BootstrapPrefix": {
      "Type": "String",
    },
    "CFNInvokePolicy": {
      "Type": "String",
    },
    "CFNLambda": {
      "Type": "String",
    },
    "ContentDesignerOutputBucket": {
      "Type": "String",
    },
    "CustomQnABotSettings": {
      "Type": "String",
    },
    "DefaultQnABotSettings": {
      "Type": "String",
    },
    "EsEndpoint": {
      "Type": "String",
    },
    "EsProxyLambda": {
      "Type": "String",
    },
    "ExportBucket": {
      "Type": "String",
    },
    "KendraCrawlerSnsTopic": {
      "Type": "String",
    },
    "KendraFaqIndexId": {
      "Type": "String",
    },
    "KendraWebPageIndexId": {
      "Type": "String",
    },
    "LexV2BotAlias": {
      "Type": "String",
    },
    "LexV2BotAliasId": {
      "Type": "String",
    },
    "LexV2BotId": {
      "Type": "String",
    },
    "LexV2BotLocaleIds": {
      "Type": "String",
    },
    "LexV2BotName": {
      "Type": "String",
    },
    "LexVersion": {
      "Type": "String",
    },
    "LogRetentionPeriod": {
      "Type": "Number",
    },
    "PrivateQnABotSettings": {
      "Type": "String",
    },
    "QnABotCommonLambdaLayer": {
      "Type": "String",
    },
    "S3Clean": {
      "Type": "String",
    },
    "Stage": {
      "Type": "String",
    },
    "VPCSecurityGroupIdList": {
      "Type": "String",
    },
    "VPCSubnetIdList": {
      "Type": "String",
    },
    "VarIndex": {
      "Type": "String",
    },
    "XraySetting": {
      "Type": "String",
    },
  },
  "Resources": {
    "CloudWatchEventRule": {
      "Properties": {
        "Description": "Parameter Setting Change",
        "EventPattern": {
          "detail": {
            "name": [
              {
                "Ref": "CustomQnABotSettings",
              },
            ],
            "operation": [
              "Update",
            ],
          },
          "detail-type": [
            "Parameter Store Change",
          ],
          "source": [
            "aws.ssm",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "KendraNativeCrawlerScheduleUpdateLambda",
                "Arn",
              ],
            },
            "Id": "KendraCrawler",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ConnectApiResource": {
      "Properties": {
        "ParentId": {
          "Ref": "ApiRootResourceId",
        },
        "PathPart": "connect",
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ConnectCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/connect.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "ConnectGet": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200,
            },
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ConnectLambda",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
          },
        ],
        "ResourceId": {
          "Ref": "ConnectApiResource",
        },
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ConnectLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/connect.zip",
          },
          "S3ObjectVersion": {
            "Ref": "ConnectCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "LexV2BotAlias": {
              "Ref": "LexV2BotAlias",
            },
            "LexV2BotAliasId": {
              "Ref": "LexV2BotAliasId",
            },
            "LexV2BotId": {
              "Ref": "LexV2BotId",
            },
            "LexV2BotLocaleIds": {
              "Ref": "LexV2BotLocaleIds",
            },
            "LexV2BotName": {
              "Ref": "LexV2BotName",
            },
            "LexVersion": {
              "Ref": "LexVersion",
            },
            "accountId": {
              "Ref": "AWS::AccountId",
            },
            "outputBucket": {
              "Ref": "ExportBucket",
            },
            "region": {
              "Ref": "AWS::Region",
            },
            "s3Prefix": "connect/",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ConnectLambdaLogGroup",
          },
        },
        "MemorySize": "1024",
        "Role": {
          "Fn::GetAtt": [
            "ExportRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Export",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ConnectLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-ConnectLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "Deployment": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ConnectGet",
        "ConnectApiResource",
        "InvokePermissionConnectLambda",
        "GenesysGet",
        "GenesysApiResource",
        "InvokePermissionGenesysLambda",
        "TranslatePost",
        "TranslateApiResource",
        "TranslateApiRootResource",
        "KendraNativeCrawlerPost",
        "KendraNativeCrawlerApiResource",
        "InvokePermissionTranslateLambda",
        "KendraNativeCrawlerGet",
      ],
      "Properties": {
        "ApiDeploymentId": {
          "Ref": "ApiDeploymentId",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
        "buildDate": Any<Date>,
        "restApiId": {
          "Ref": "Api",
        },
        "stage": {
          "Ref": "Stage",
        },
      },
      "Type": "Custom::ApiDeployment",
    },
    "ExportClean": {
      "DependsOn": [
        "ExportPolicy",
      ],
      "Properties": {
        "Bucket": {
          "Ref": "ExportBucket",
        },
        "ServiceToken": {
          "Ref": "S3Clean",
        },
      },
      "Type": "Custom::S3Clean",
    },
    "ExportCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/export.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "ExportPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObjectVersion",
                "s3:DeleteObject",
                "s3:GetObjectVersion",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::\${ExportBucket}*",
                },
                {
                  "Fn::Sub": "arn:aws:s3:::\${ContentDesignerOutputBucket}*",
                },
              ],
            },
            {
              "Action": [
                "lambda:InvokeFunction",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Ref": "EsProxyLambda",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "ExportRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "ExportPolicy",
          },
        ],
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambdaVPCAccessExecutionRole",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets",
                    "xray:GetSamplingStatisticSummaries",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "xrayDaemonWriteAccess",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExportStepLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/export.zip",
          },
          "S3ObjectVersion": {
            "Ref": "ExportCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "ES_ENDPOINT": {
              "Ref": "EsEndpoint",
            },
            "ES_INDEX": {
              "Ref": "VarIndex",
            },
            "ES_PROXY": {
              "Ref": "EsProxyLambda",
            },
            "OUTPUT_S3_BUCKET": {
              "Ref": "ContentDesignerOutputBucket",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "index.step",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ExportStepLambdaLogGroup",
          },
        },
        "MemorySize": "1024",
        "Role": {
          "Fn::GetAtt": [
            "ExportRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Export",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExportStepLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-ExportStepLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "ExportStepPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ExportStepLambda",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::Sub": "arn:aws:s3:::\${ExportBucket}",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ExportTriggerFromS3": {
      "Properties": {
        "Bucket": {
          "Ref": "ExportBucket",
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*",
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "prefix",
                      "Value": "status-export",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "ExportStepLambda",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Lambda",
    },
    "GenesysApiResource": {
      "Properties": {
        "ParentId": {
          "Ref": "ApiRootResourceId",
        },
        "PathPart": "genesys",
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "GenesysCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/genesys.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "GenesysGet": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200,
            },
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GenesysLambda",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
          },
        ],
        "ResourceId": {
          "Ref": "GenesysApiResource",
        },
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "GenesysLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/genesys.zip",
          },
          "S3ObjectVersion": {
            "Ref": "GenesysCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "LexV2BotAlias": {
              "Ref": "LexV2BotAlias",
            },
            "LexV2BotAliasId": {
              "Ref": "LexV2BotAliasId",
            },
            "LexV2BotId": {
              "Ref": "LexV2BotId",
            },
            "LexV2BotLocaleIds": {
              "Ref": "LexV2BotLocaleIds",
            },
            "LexV2BotName": {
              "Ref": "LexV2BotName",
            },
            "LexVersion": {
              "Ref": "LexVersion",
            },
            "accountId": {
              "Ref": "AWS::AccountId",
            },
            "outputBucket": {
              "Ref": "ExportBucket",
            },
            "region": {
              "Ref": "AWS::Region",
            },
            "s3Prefix": "genesys/",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "GenesysLambdaLogGroup",
          },
        },
        "MemorySize": "1024",
        "Role": {
          "Fn::GetAtt": [
            "ExportRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Export",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GenesysLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-GenesysLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "InvokePermissionConnectLambda": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConnectLambda",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "InvokePermissionGenesysLambda": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GenesysLambda",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "InvokePermissionTranslateLambda": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TranslateLambda",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "KendraNativeCrawlerApiResource": {
      "Properties": {
        "ParentId": {
          "Ref": "ApiRootResourceId",
        },
        "PathPart": "kendranativecrawler",
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "KendraNativeCrawlerCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/kendra-webcrawler.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "KendraNativeCrawlerGet": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200,
            },
            {
              "ResponseTemplates": {
                "application/xml": "{"error":"Bad Request"}",
              },
              "SelectionPattern": "Exception.*",
              "StatusCode": 400,
            },
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "KendraNativeCrawlerStatusLambda",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
          },
          {
            "StatusCode": 400,
          },
        ],
        "ResourceId": {
          "Ref": "KendraNativeCrawlerApiResource",
        },
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "KendraNativeCrawlerInvokePermissionConnectLambda": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "KendraNativeCrawlerLambda",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "KendraNativeCrawlerLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/kendra-webcrawler.zip",
          },
          "S3ObjectVersion": {
            "Ref": "KendraNativeCrawlerCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CUSTOM_SETTINGS_PARAM": {
              "Ref": "CustomQnABotSettings",
            },
            "DASHBOARD_NAME": {
              "Fn::Join": [
                "-",
                [
                  "QNABotKendraDashboard",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Ref": "DefaultQnABotSettings",
                          },
                        ],
                      },
                    ],
                  },
                  "v2",
                ],
              ],
            },
            "DATASOURCE_NAME": {
              "Fn::Join": [
                "-",
                [
                  "QNABotKendraNativeCrawler",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Ref": "DefaultQnABotSettings",
                          },
                        ],
                      },
                    ],
                  },
                  "v2",
                ],
              ],
            },
            "DEFAULT_SETTINGS_PARAM": {
              "Ref": "DefaultQnABotSettings",
            },
            "PRIVATE_SETTINGS_PARAM": {
              "Ref": "PrivateQnABotSettings",
            },
            "ROLE_ARN": {
              "Fn::GetAtt": [
                "KendraNativeCrawlerPassRole",
                "Arn",
              ],
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "kendra_webcrawler.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "KendraNativeCrawlerLambdaLogGroup",
          },
        },
        "MemorySize": "2048",
        "Role": {
          "Fn::GetAtt": [
            "KendraNativeCrawlerRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Export",
          },
        ],
        "Timeout": 900,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "KendraNativeCrawlerLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-KendraNativeCrawlerLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "KendraNativeCrawlerLambdaStatusInvokePermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "KendraNativeCrawlerStatusLambda",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "KendraNativeCrawlerPassPolicy": {
      "Condition": "CreateKendraCrawlerPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kendra:BatchPutDocument",
                "kendra:BatchDeleteDocument",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:kendra:\${AWS::Region}:\${AWS::AccountId}:index/\${KendraWebPageIndexId}",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "KendraNativeCrawlerPassRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "kendra.amazonaws.com",
                  "lambda.amazonaws.com",
                ],
              },
              "Sid": "KendraNativeCrawlerServicePrincipals",
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::If": [
              "CreateKendraCrawlerPolicy",
              {
                "Ref": "KendraNativeCrawlerPassPolicy",
              },
              {
                "Ref": "AWS::NoValue",
              },
            ],
          },
        ],
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambdaVPCAccessExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KendraNativeCrawlerPolicy": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutDashboard",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:\${AWS::Partition}:cloudwatch::\${AWS::AccountId}:dashboard/QNA*",
                },
              ],
            },
            {
              "Fn::If": [
                "CreateKendraCrawlerPolicy",
                {
                  "Action": [
                    "kendra:ListDataSources",
                    "kendra:ListDataSourceSyncJobs",
                    "kendra:DescribeDataSource",
                    "kendra:CreateDataSource",
                    "kendra:StartDataSourceSyncJob",
                    "kendra:StopDataSourceSyncJob",
                    "kendra:UpdateDataSource",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:\${AWS::Partition}:kendra:\${AWS::Region}:\${AWS::AccountId}:index/\${KendraWebPageIndexId}",
                    },
                    {
                      "Fn::Sub": "arn:\${AWS::Partition}:kendra:\${AWS::Region}:\${AWS::AccountId}:index/\${KendraWebPageIndexId}/data-source/*",
                    },
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/",
                      {
                        "Ref": "CustomQnABotSettings",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/",
                      {
                        "Ref": "DefaultQnABotSettings",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/",
                      {
                        "Ref": "PrivateQnABotSettings",
                      },
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KendraNativeCrawlerPassRole",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "KendraNativeCrawlerPost": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200,
            },
            {
              "ResponseTemplates": {
                "application/xml": "{"error":"Bad Request"}",
              },
              "SelectionPattern": "Exception.*",
              "StatusCode": 400,
            },
          ],
          "RequestParameters": {
            "integration.request.header.X-Amz-Invocation-Type": "'Event'",
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "KendraNativeCrawlerLambda",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
          },
          {
            "StatusCode": 400,
          },
        ],
        "ResourceId": {
          "Ref": "KendraNativeCrawlerApiResource",
        },
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "KendraNativeCrawlerRole": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kendra.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
          {
            "Ref": "KendraNativeCrawlerPolicy",
          },
        ],
        "Path": "/",
      },
      "Type": "AWS::IAM::Role",
    },
    "KendraNativeCrawlerScheduleUpdateCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/kendra-webcrawler-schedule-updater.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "KendraNativeCrawlerScheduleUpdateLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/kendra-webcrawler-schedule-updater.zip",
          },
          "S3ObjectVersion": {
            "Ref": "KendraNativeCrawlerScheduleUpdateCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CUSTOM_SETTINGS_PARAM": {
              "Ref": "CustomQnABotSettings",
            },
            "DATASOURCE_NAME": {
              "Fn::Join": [
                "-",
                [
                  "QNABotKendraNativeCrawler",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Ref": "DefaultQnABotSettings",
                          },
                        ],
                      },
                    ],
                  },
                  "v2",
                ],
              ],
            },
            "DEFAULT_SETTINGS_PARAM": {
              "Ref": "DefaultQnABotSettings",
            },
            "PRIVATE_SETTINGS_PARAM": {
              "Ref": "PrivateQnABotSettings",
            },
            "ROLE_ARN": {
              "Fn::GetAtt": [
                "KendraNativeCrawlerPassRole",
                "Arn",
              ],
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "kendra_webcrawler_schedule_updater.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "KendraNativeCrawlerScheduleUpdateLambdaLogGroup",
          },
        },
        "MemorySize": "2048",
        "Role": {
          "Fn::GetAtt": [
            "KendraNativeCrawlerRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Export",
          },
        ],
        "Timeout": 900,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "KendraNativeCrawlerScheduleUpdateLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-KendraNativeCrawlerScheduleUpdateLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "KendraNativeCrawlerStatusCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/kendra-webcrawler-status.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "KendraNativeCrawlerStatusLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/kendra-webcrawler-status.zip",
          },
          "S3ObjectVersion": {
            "Ref": "KendraNativeCrawlerStatusCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CUSTOM_SETTINGS_PARAM": {
              "Ref": "CustomQnABotSettings",
            },
            "DASHBOARD_NAME": {
              "Fn::Join": [
                "-",
                [
                  "QNABotKendraDashboard",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Ref": "DefaultQnABotSettings",
                          },
                        ],
                      },
                    ],
                  },
                  "v2",
                ],
              ],
            },
            "DATASOURCE_NAME": {
              "Fn::Join": [
                "-",
                [
                  "QNABotKendraNativeCrawler",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Ref": "DefaultQnABotSettings",
                          },
                        ],
                      },
                    ],
                  },
                  "v2",
                ],
              ],
            },
            "DEFAULT_SETTINGS_PARAM": {
              "Ref": "DefaultQnABotSettings",
            },
            "PRIVATE_SETTINGS_PARAM": {
              "Ref": "PrivateQnABotSettings",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "kendra_webcrawler_status.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "KendraNativeCrawlerStatusLambdaLogGroup",
          },
        },
        "MemorySize": "2048",
        "Role": {
          "Fn::GetAtt": [
            "KendraNativeCrawlerRole",
            "Arn",
          ],
        },
        "Runtime": "python",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Export",
          },
        ],
        "Timeout": 900,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "KendraNativeCrawlerStatusLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-KendraNativeCrawlerStatusLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "KendraS3Policy": {
      "Condition": "CreateKendraSyncPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::\${ContentDesignerOutputBucket}",
                },
                {
                  "Fn::Sub": "arn:aws:s3:::\${ContentDesignerOutputBucket}/*",
                },
              ],
            },
            {
              "Action": [
                "kendra:CreateFaq",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:kendra:\${AWS::Region}:\${AWS::AccountId}:index/\${KendraFaqIndexId}",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "KendraS3Role": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kendra.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::If": [
              "CreateKendraSyncPolicy",
              {
                "Ref": "KendraS3Policy",
              },
              {
                "Ref": "AWS::NoValue",
              },
            ],
          },
        ],
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambdaVPCAccessExecutionRole",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets",
                    "xray:GetSamplingStatisticSummaries",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "xrayDaemonWriteAccess",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KendraSyncLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/export.zip",
          },
          "S3ObjectVersion": {
            "Ref": "SyncCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "CUSTOM_SETTINGS_PARAM": {
              "Ref": "CustomQnABotSettings",
            },
            "DEFAULT_SETTINGS_PARAM": {
              "Ref": "DefaultQnABotSettings",
            },
            "KENDRA_ROLE": {
              "Fn::GetAtt": [
                "KendraS3Role",
                "Arn",
              ],
            },
            "OUTPUT_S3_BUCKET": {
              "Ref": "ContentDesignerOutputBucket",
            },
            "PRIVATE_SETTINGS_PARAM": {
              "Ref": "PrivateQnABotSettings",
            },
            "REGION": {
              "Ref": "AWS::Region",
            },
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
          },
        },
        "Handler": "kendraSync.performSync",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
          {
            "Ref": "QnABotCommonLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "KendraSyncLambdaLogGroup",
          },
        },
        "MemorySize": "1024",
        "Role": {
          "Fn::GetAtt": [
            "KendraSyncRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Sync",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "KendraSyncLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-KendraSyncLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "KendraSyncPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "KendraSyncLambda",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::Sub": "arn:aws:s3:::\${ContentDesignerOutputBucket}",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "KendraSyncPolicy": {
      "Condition": "CreateKendraSyncPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:Get*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::\${ContentDesignerOutputBucket}",
                },
                {
                  "Fn::Sub": "arn:aws:s3:::\${ContentDesignerOutputBucket}/*",
                },
              ],
            },
            {
              "Action": [
                "iam:passRole",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "KendraS3Role",
                    "Arn",
                  ],
                },
              ],
            },
            {
              "Action": [
                "ssm:getParameter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:*",
                },
              ],
            },
            {
              "Action": [
                "kendra:CreateFaq",
                "kendra:ListFaqs",
                "kendra:TagResource",
                "kendra:DeleteFaq",
                "kendra:DescribeFaq",
                "kendra:DetectPiiEntities",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:kendra:\${AWS::Region}:\${AWS::AccountId}:index/\${KendraFaqIndexId}",
                },
                {
                  "Fn::Sub": "arn:aws:kendra:\${AWS::Region}:\${AWS::AccountId}:index/\${KendraFaqIndexId}/faq/*",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "KendraSyncRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kendra.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::If": [
              "CreateKendraSyncPolicy",
              {
                "Ref": "KendraSyncPolicy",
              },
              {
                "Ref": "AWS::NoValue",
              },
            ],
          },
        ],
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambdaVPCAccessExecutionRole",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets",
                    "xray:GetSamplingStatisticSummaries",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "xrayDaemonWriteAccess",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KendraSyncS3Trigger": {
      "Properties": {
        "Bucket": {
          "Ref": "ContentDesignerOutputBucket",
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*",
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "prefix",
                      "Value": "kendra-data-export",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "KendraSyncLambda",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Lambda",
    },
    "KendraTopicApiGateRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sns:Publish",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "KendraCrawlerSnsTopic",
                  },
                },
                {
                  "Action": [
                    "logs:PutLogEvents",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:\${AWS::Partition}:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:*",
                    },
                    {
                      "Fn::Sub": "arn:\${AWS::Partition}:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:*:log-stream:*",
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "GatewayRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ParameterChangeRuleKendraCrawlerPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "KendraNativeCrawlerScheduleUpdateLambda",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CloudWatchEventRule",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "SyncCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/export.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "TranslateApiResource": {
      "Properties": {
        "ParentId": {
          "Ref": "TranslateApiRootResource",
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TranslateApiRootResource": {
      "Properties": {
        "ParentId": {
          "Ref": "ApiRootResourceId",
        },
        "PathPart": "translate",
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TranslateCodeVersion": {
      "Properties": {
        "Bucket": {
          "Ref": "BootstrapBucket",
        },
        "BuildDate": Any<String>,
        "Key": {
          "Fn::Sub": "\${BootstrapPrefix}/lambda/translate.zip",
        },
        "ServiceToken": {
          "Ref": "CFNLambda",
        },
      },
      "Type": "Custom::S3Version",
    },
    "TranslateLambda": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "This lambda function does not require to have ReservedConcurrentExecutions",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "LAMBDA_CONCURRENCY_CHECK",
            "LAMBDA_INSIDE_VPC",
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BootstrapBucket",
          },
          "S3Key": {
            "Fn::Sub": "\${BootstrapPrefix}/lambda/translate.zip",
          },
          "S3ObjectVersion": {
            "Ref": "TranslateCodeVersion",
          },
        },
        "Environment": {
          "Variables": {
            "SOLUTION_ID": "SO0189",
            "SOLUTION_VERSION": "vx.x.x",
            "outputBucket": {
              "Ref": "ExportBucket",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "TranslateLambdaLogGroup",
          },
        },
        "MemorySize": "1024",
        "Role": {
          "Fn::GetAtt": [
            "TranslateRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs",
        "Tags": [
          {
            "Key": "Type",
            "Value": "Export",
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Fn::If": [
            "XRAYEnabled",
            {
              "Mode": "Active",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "VpcConfig": {
          "Fn::If": [
            "VPCEnabled",
            {
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSecurityGroupIdList",
                  },
                ],
              },
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Ref": "VPCSubnetIdList",
                  },
                ],
              },
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TranslateLambdaLogGroup": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Sub": "/aws/lambda/\${AWS::StackName}-TranslateLambda",
              },
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RetentionInDays": {
          "Fn::If": [
            "LogRetentionPeriodIsNotZero",
            {
              "Ref": "LogRetentionPeriod",
            },
            {
              "Ref": "AWS::NoValue",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "TranslatePolicy": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W13",
              "reason": "This IAM policy requires to have * resource",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "translate:ImportTerminology",
                "translate:ListTerminologies",
              ],
              "Effect": "Allow",
              "Resource": [
                "*",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "TranslatePost": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": 200,
            },
          ],
          "RequestTemplates": {
            "application/x-www-form-urlencoded": "{"body":$input.json('$')}",
          },
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "TranslateLambda",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
          },
        ],
        "ResourceId": {
          "Ref": "TranslateApiResource",
        },
        "RestApiId": {
          "Ref": "Api",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TranslateRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "This IAM role requires to have * resource on its permission policy",
            },
          ],
        },
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "TranslatePolicy",
          },
        ],
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambdaVPCAccessExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
